<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.fraunhofer.fokus.sq.nmf</groupId>
    <artifactId>nmf</artifactId>
    <version>0.1</version>
    <packaging>jar</packaging>

    <name>Network mutation Fuzzer</name>
    <url>http://fokus.fraunhofer.de</url>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>
    <scm>
        <connection>scm:git:https://github.com/fraunhoferfokus/Fuzzino.git</connection>
        <developerConnection>scm:git:https://github.com/fraunhoferfokus/Fuzzino.git</developerConnection>
        <url>https://github.com/fraunhoferfokus/Fuzzino.git</url>
    </scm>

    <repositories>
        <repository>
            <id>mvnrepository</id>
            <name>mvnrepository</name>
            <url>http://www.mvnrepository.com</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.3.0-M1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-commons</artifactId>
            <version>1.3.0-M1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.0.3</version>
            <scope>test</scope>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>de.fraunhofer.fokus.fuzzing.fuzzino</groupId>-->
        <!--<artifactId>fuzzino</artifactId>-->
        <!--<version>1.0.0</version>-->
        <!--<systemPath>${project.basedir}/lib/fuzzino.jar</systemPath>-->
        <!--<scope>system</scope>-->
        <!--</dependency>-->
    </dependencies>

    <build>
        <sourceDirectory>.</sourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-scm-plugin</artifactId>
                <version>1.10.0</version>
                <configuration>
                    <goals>install</goals>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Build an executable JAR -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>de.fraunhofer.fokus.fuzzing.nmf.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>ISO-8859-1</encoding>
                    <includes>
                        <include>target/checkout/fuzzino-src/src/**/*.java</include>
                        <include>src/**/*.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                def lines = 0
                                def badPath = "target/checkout/fuzzino-src/src/de/fraunhofer/fokus/fuzzing/fuzzino/heuristics/generators/string/data/BadLongUnicodeStrings.java"
                                def badFile = new File(badPath)
                                def buffer = new StringBuffer();
                                badFile.eachLine { line ->
                                    lines++
                                    if (lines != 227) {
                                        buffer.append(line)
                                        buffer.append(System.lineSeparator())
                                    } else {
                                        if (!line.contains("u8202")) {
                                            buffer.append(line)
                                            buffer.append(System.lineSeparator())
                                        }
                                    }
                                }
                                println "Lines:" + lines
                                new File(badPath).withWriter { writer ->
                                    writer.write(buffer.toString())
                                }
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>